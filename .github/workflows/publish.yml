name: Test and Publish

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to check branch ancestry

      - name: Verify tag is on master branch
        shell: bash
        run: |
          # Check if the current commit (tag) is reachable from master
          if ! git merge-base --is-ancestor HEAD origin/master; then
            echo "Error: Tag ${{ github.ref_name }} is not on the master branch"
            echo "Tags can only be published from commits that exist on master"
            exit 1
          fi
          echo "âœ… Tag ${{ github.ref_name }} is on master branch"

      - name: Validate tag format
        shell: bash
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "Publishing tag: $TAG"
          if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-beta(\.[0-9]+)?)?$ ]]; then
            echo "Invalid tag format. Expected: v1.2.3 or v1.2.3-beta or v1.2.3-beta.1"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        shell: bash
        run: yarn install --frozen-lockfile

      - name: Determine npm tag
        id: npm-tag
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if [[ "$TAG" == *"-beta"* ]]; then
            echo "tag=beta" >> $GITHUB_OUTPUT
            echo "Publishing as beta release"
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "Publishing as latest release"
          fi

      - name: Publish release to NPM
        shell: bash
        run: |
          echo "About to run: npm publish --provenance --tag ${{ steps.npm-tag.outputs.tag }}"
          npm publish --provenance --tag ${{ steps.npm-tag.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
